[tool.poetry]
name = "recipefy"
version = "1.0.0"
description = "A social media webapp to share recipe ideas"
authors = ["jamesislan"]
license = "MIT"
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.12"
Django = "5.0.1"
asgiref = "3.7.2"
Faker = "22.2.0"
pillow = "10.2.0"
python-dateutil = "2.8.2"
six = "1.16.0"
sqlparse = "0.4.4"
tzdata = "2023.4"

[tool.poetry.group.dev.dependencies]
taskipy = "^1.12.2"
pytest = "^7.4.4"
pytest-django = "^4.7.0"
ruff = "^0.1.14"
parameterized = "^0.9.0"
coverage = "^7.4.0"
factory-boy = "^3.3.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.taskipy.tasks]
test = "python -m unittest tests/test_*.py"
lint = "pylint tests taskipy"

[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "core.settings"
python_files = [
    "test.py", "test_*.py", "*_test.py",
    "tests.py", "tests_*.py", "*_tests.py",
    "testing/python/*.py"
    ]
addopts = ["--doctest-modules", "--strict-markers", "-rP"]
markers = ["slow", "fast"]

[tool.ruff]
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]

# Same as Black.
line-length = 88
indent-width = 4

# Assume Python 3.12
target-version = "py312"

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
select = ["E4", "E7", "E9", "F"]
ignore = ["F401"]

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "single"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = false

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"

[tool.coverage.run]
branch = true
omit = [
    "*/venv/*",
    "*/*test*.py",
    "manage.py",
    "core/*.py"
]